% function both_AgCC_analysis(RestingState_mode)
%--------------------------------------------------------------------------
% Created by : Celine Provins (06.2020)
%
% Extract the whole brain CAPs using both control and AgCC subjects combined
%
% RestingState_mode : bool precising whether you want to work with resting
%   state data (1) or working memory data (0)
%--------------------------------------------------------------------------
    %% Set up the paths
    RestingState_mode = 1;
    %celinePath = 'J:\Anjali_Diffusion_Pipeline\Celine';
    celinePath = '/media/miplab-nas2/Data/Anjali_Diffusion_Pipeline/Celine';
    spmPath = fullfile(celinePath,'spm12');
    codeBasePath = fullfile(celinePath, 'kmeans');
    cbiPath = fullfile(celinePath,'mrTools');
    dataPath = fullfile(celinePath, 'data');
    if RestingState_mode
        InpaintingPath = fullfile(dataPath,'RestingState','Inpainting_results');
        capPath_AgCC = fullfile(dataPath,'RestingState','WholeBrainCAP');
        capPath_Ctrl = fullfile(dataPath,'ControlsRS','WholeBrainCAP');
        BothCapPath = fullfile(dataPath,'WholeBrainCAP_RS');
        if ~exist(BothCapPath,'dir')
        mkdir(dataPath,'WholeBrainCAP_RS');
        end
    else
        InpaintingPath = fullfile(dataPath,'WorkingMemory','Inpainting_results');
        capPath_AgCC = fullfile(dataPath,'WorkingMemory','WholeBrainCAP');
        capPath_Ctrl = fullfile(dataPath,'ControlsWM','WholeBrainCAP');
        BothCapPath = fullfile(dataPath,'WholeBrainCAP_WM');
        if ~exist(BothCapPath,'dir')
        mkdir(dataPath,'WholeBrainCAP_WM');
        end
    end
    
    addpath(genpath(spmPath));
    addpath(genpath(codeBasePath));
    addpath(genpath(cbiPath));
    %% Load the data generated by AgCC and Ctrl
    
    disp('Loading AgCC low resolution')
    active_AgCC_lr = load(fullfile(capPath_AgCC,'active_lowResolution.mat'));
    active_AgCC_GSR_truncated_lr = active_AgCC_lr.active_GSR_truncated_lr;
    idx_AgCC_lr = active_AgCC_lr.idx_lr;
    
    disp('Loading AgCC')
    active_AgCC = load(fullfile(capPath_AgCC,'active.mat'));
    active_AgCC_GSR_truncated = active_AgCC.active_GSR_truncated;
    idx_AgCC = active_AgCC.idx;

    disp('Loading Ctrl low resolution')
    active_Ctrl_lr = load(fullfile(capPath_Ctrl,'active_lowResolution.mat'));
    active_Ctrl_GSR_truncated_lr = active_Ctrl_lr.active_GSR_truncated_lr;
    idx_Ctrl_lr = active_Ctrl_lr.idx_lr;
    
    disp('Loading Ctrl')
    active_Ctrl = load(fullfile(capPath_Ctrl,'active.mat'));
    active_Ctrl_GSR_truncated = active_Ctrl.active_GSR_truncated;
    idx_Ctrl = active_Ctrl.idx;

    idx = union(idx_Ctrl,idx_AgCC);
    NC = size(active_Ctrl_GSR_truncated_lr,1);
    NA = size(active_AgCC_GSR_truncated_lr,1);
    N = NA+NC;
    if RestingState_mode
        hdr=cbiReadNiftiHeader(fullfile(InpaintingPath,'s012','w2WholeBrainIN001.nii'));
        hdrLR=cbiReadNiftiHeader(fullfile(InpaintingPath,'s012','w3WholeBrainIN001.nii'));
    else
        hdr=cbiReadNiftiHeader(fullfile(InpaintingPath,'s102','w2WholeBrainIN001.nii'));
        hdrLR=cbiReadNiftiHeader(fullfile(InpaintingPath,'s102','w3WholeBrainIN001.nii'));
    end

    %% GSR active frames
    disp('Extraction of GSR Data')
    V_GSR_lr = extract_data(active_Ctrl_GSR_truncated_lr, active_AgCC_GSR_truncated_lr,...
    idx_Ctrl_lr, idx_AgCC_lr, hdrLR, NA, NC);

    V_GSR = extract_data(active_Ctrl_GSR_truncated, active_AgCC_GSR_truncated,...
    idx_Ctrl, idx_AgCC, hdr, NA, NC);

    %% K-MEANS
    optimize_k = 0; %% decide whether to select an optimal k
    k_range = [2,3,4,5,6,7,8];
    if optimize_k
        disp('Finding optimal nbr of clusters');
        [k_opt] = find_optimal_k(active_Ctrl_GSR_truncated_lr,k_range,BothCapPath);
        k = k_opt;
    else
        k = 8;
    end
    disp('Performing k-means');
    cluster_idx_GSR = kmeans(V_GSR_lr,k,'replicate',10,'Distance','cosine');
    disp('Clustering GSR done');

    %% get and save the CAPs

    disp('Getting the CAPs for both AgCC and Controls combined');
    CAP_both_GSR = getCAPs(V_GSR,k,cluster_idx_GSR);

    disp('Saving the CAPs for both AgCC and Controls combined');
    saveCAPs('GSR_',CAP_both_GSR,hdr,k,idx,1,[],BothCapPath);

    %% Save frames in group wrt to their CAP membership
    frame_GSR = [];
    for i = 1:k
        frame_GSR = vertcat(frame_GSR,0,find(cluster_idx_GSR==i));
    end
    save(fullfile(BothCapPath,'frame_check.mat'),'frame_GSR');
    save(fullfile(BothCapPath,'CAP.mat'),'idx','CAP_both_GSR','-v7.3');
%end

function V = extract_data(active_Ctrl_truncated, active_AgCC_truncated,...
    idx_Ctrl, idx_AgCC, hdr, NA, NC)
    %Combine the frames from Controls and AgCC into one matrix
    N = NA + NC;
    idx = union(idx_Ctrl,idx_AgCC);
    
    V = zeros(N,hdr.dim(2)*hdr.dim(3)*hdr.dim(4));
    for i = 1:NC
        V(i,idx_Ctrl) = active_Ctrl_truncated(i,:);
    end
    for i = 1:NA
        V(i+NC,idx_AgCC) = active_AgCC_truncated(i,:);
    end
    V = V(:,idx);
end